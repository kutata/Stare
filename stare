#!/usr/bin/env python
import sys
from time import sleep
from subprocess import Popen, PIPE
from os import listdir
from os.path import getmtime, isfile, join
import re

# filters
SUFFIX_IGNORE = ['.jpg', '.png', '.gif', '.pyc', '.log', '.pk']
FOLDERS_IGNORE = ['.git']
SUFFIX_IGNORE_PATTERN = '|'.join(str(x) for x in SUFFIX_IGNORE) + '|^\..+'
FILES_IGNORE = []

def check():
  cmd = []
  # check options
  if len(sys.argv) < 2:
    exit('Please specified watch file.')
  # default exec with PYTHON
  elif len(sys.argv) < 3:
    cmd = ['python'] + sys.argv[1:]
  # exec with specified tool
  else:
    cmd = sys.argv[1:]

  return cmd


# ignore when output file
if len(sys.argv) > 3:
  FILES_IGNORE.append(sys.argv[-1])

def get_files(path):
  fs = listdir(path)
  files = []
  for f in fs:
    if not isfile(join(path, f)):
      if f in FOLDERS_IGNORE:
        continue

      files += get_files(join(path, f))
    else:
      if f in FILES_IGNORE:
        continue
      if re.search(SUFFIX_IGNORE_PATTERN, f):
        continue

      files.append(join(path, f))

  return files

def get_mtime(files):
  return [(f, getmtime(f)) for f in files]

def start():
  cmd = ' '.join(check())
  p = Popen(cmd, shell=True)
  return p

def main():
  try:
    FILES = get_files('./')
    FILES_MTIMES = get_mtime(FILES)
    p = start()

    while True:
      for f, mtime in FILES_MTIMES:
        if (isfile(f)):
          if getmtime(f) != mtime:
            print('\nfile: ' + f + ' has changed.')
            print('--------- restarted --------\n')

            if not p is None:
              p.kill()

              FILES = get_files('./')
              FILES_MTIMES = get_mtime(FILES)

              p = start()

      sleep(1)

  except KeyboardInterrupt:
    p.kill()
    print('\n Stopped')

if __name__ == '__main__':
  main()
